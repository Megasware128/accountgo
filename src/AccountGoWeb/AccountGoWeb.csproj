<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <AssemblyName>AccountGoWeb</AssemblyName>
    <PackageId>AccountGoWeb</PackageId>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <Version>0.0.1-alpha</Version>
    <Language>Latest</Language>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
  </PropertyGroup>

  <ItemGroup>
    <None Update="wwwroot\**\*;Views\**\*;Areas\**\Views;">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../Dto/Dto.csproj" />
    <ProjectReference Include="../Infrastructure/Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BundlerMinifier.Core" Version="3.2.449" />
    <PackageReference Include="ExpressiveAnnotations" Version="2.9.6" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="BundlerMinifier.Core" Version="3.2.449" />
  </ItemGroup>

  <Target Name="NpmCommands" AfterTargets="Build">    
    <Exec Command="npm install" />
    <Exec Command="npm run gulp" />
    <!-- Important: NODE_ENV and APIURLSPA are used by webpack to properly set the api url. Here, it access the environment variable which is set in dockerfile. -->
    <Message Text="NODE_ENV: =&gt; $(NODE_ENV), APIURLSPA: =&gt; $(APIURLSPA)" Importance="high" />
    <Exec Command="npm --nodeenv=$(NODE_ENV) --apiurlspa=$(APIURLSPA) run-script webpack" />
  </Target>

  <!-- <Import Project="ModulesReferences.targets" /> -->

</Project>
